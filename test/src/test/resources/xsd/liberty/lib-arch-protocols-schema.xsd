<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
  attributeFormDefault="unqualified"
  elementFormDefault="qualified"
  targetNamespace="urn:liberty:iff:2003-08"
  xmlns:ac="urn:liberty:ac:2003-08"
  xmlns:lib="urn:liberty:iff:2003-08"
  xmlns:md="urn:liberty:metadata:2003-08"
  xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion"
  xmlns:samlp="urn:oasis:names:tc:SAML:1.0:protocol"
  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"
  xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:import
    namespace="urn:oasis:names:tc:SAML:1.0:assertion"
    schemaLocation="cs-sstc-schema-assertion-01.xsd"/>
  <xs:import
    namespace="urn:oasis:names:tc:SAML:1.0:protocol"
    schemaLocation="cs-sstc-schema-protocol-01.xsd"/>
  <xs:import
    namespace="http://www.w3.org/2001/04/xmlenc#"
    schemaLocation="xenc-schema.xsd"/>
  <xs:import
    namespace="urn:liberty:ac:2003-08"
    schemaLocation="lib-arch-authn-context.xsd"/>
  <xs:import
    namespace="urn:liberty:metadata:2003-08"
    schemaLocation="lib-arch-metadata.xsd"/>

  <xs:include
    schemaLocation="lib-arch-iff-utility.xsd"/>

  <xs:annotation>
    <xs:documentation> ### IMPORTANT NOTICE ### The source code in this XSD file was excerpted
      verbatim from: Liberty Protocols and Schema Specification (lib-arch-protocols-schema-v1.2)
      Version 1.2 15 April 2003 The following notices pertain to this source file: Copyright (c)
      2002,2003 ActivCard; American Express Travel Related Services; America Online, Inc.; Bank of
      America; Bell Canada; Catavault; Cingular Wireless; Cisco Systems, Inc.; Citigroup;
      Communicator, Inc.; Consignia; Cyberun Corporation; Deloitte &amp; Touche LLP; Earthlink,
      Inc.; Electronic Data Systems, Inc.; Entrust, Inc.; Ericsson; Fidelity Investments; France
      Telecom; Gemplus; General Motors; Hewlett-Packard Company; i2 Technologies, Inc.; Intuit Inc.;
      MasterCard International; NEC Corporation; Netegrity; NeuStar; Nextel Communications; Nippon
      Telegraph and Telephone Company; Nokia Corporation; Novell, Inc.; NTT DoCoMo, Inc.; OneName
      Corporation; Openwave Systems Inc.; PricewaterhouseCoopers LLP; Register.com; RSA Security
      Inc; Sabre Holdings Corporation; SAP AG; SchlumbergerSema; SK Telecom; Sony Corporation; Sun
      Microsystems, Inc.; United Airlines; VeriSign, Inc.; Visa International; Vodafone Group Plc;
      Wave Systems;. All rights reserved. This specification document has been prepared by Sponsors
      of the Liberty Alliance. Permission is hereby granted to use the document solely for the
      purpose of implementing the Specification. No rights are granted to prepare derivative works
      of this Specification. Entities seeking permission to reproduce portions of this document for
      other uses must contact the Liberty Alliance to determine whether an appropriate license for
      such use is available. Implementation of certain elements of this Specification may require
      licenses under third party intellectual property rights, including without limi-tation, patent
      rights. The Sponsors of and any other contributors to the Specification are not, and shall not
      be held responsible in any manner, for identifying or failing to identify any or all such
      third party intellectual property rights. This Specification is provided "AS IS", and no
      participant in the Liberty Alliance makes any warranty of any kind, express or implied,
      including any implied warranties of merchantability, non-infringement of third party
      intellectual property rights, and fitness for a particular purpose. Implementors of this
      Specification are advised to review the Liberty Alliance Project's website
      (http://www.projectliberty.org) for information concerning any Necessary Claims Disclosure
      Notices that have been received by the Liberty Alliance Management Board. Liberty Alliance
      Project Licensing Administrator c/o IEEE-ISTO 445 Hoes Lane Piscataway, NJ 08855-1331, USA
    </xs:documentation>
  </xs:annotation>
  <xs:element
    name="ProviderID"
    type="md:entityIDType"/>
  <xs:element
    name="AffiliationID"
    type="md:entityIDType"/>

  <xs:element
    name="AuthnRequest"
    type="lib:AuthnRequestType"/>
  <xs:complexType
    name="AuthnRequestType">
    <xs:complexContent>
      <xs:extension
        base="samlp:RequestAbstractType">
        <xs:sequence>
          <xs:element
            maxOccurs="unbounded"
            minOccurs="0"
            ref="lib:Extension"/>
          <xs:element
            ref="lib:ProviderID"/>
          <xs:element
            minOccurs="0"
            ref="lib:AffiliationID"/>
          <xs:element
            minOccurs="0"
            ref="lib:NameIDPolicy"/>
          <xs:element
            minOccurs="0"
            name="ForceAuthn"
            type="xs:boolean"/>
          <xs:element
            minOccurs="0"
            name="IsPassive"
            type="xs:boolean"/>
          <xs:element
            minOccurs="0"
            ref="lib:ProtocolProfile"/>
          <xs:element
            minOccurs="0"
            name="AssertionConsumerServiceID"
            type="xs:string"/>
          <xs:element
            minOccurs="0"
            ref="lib:AuthnContext"/>
          <xs:element
            minOccurs="0"
            ref="lib:RelayState"/>
          <xs:element
            minOccurs="0"
            ref="lib:Scoping"/>
        </xs:sequence>
        <xs:attribute
          ref="lib:consent"
          use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType
    name="NameIDPolicyType">
    <xs:restriction
      base="xs:string">
      <xs:enumeration
        value="none"/>
      <xs:enumeration
        value="onetime"/>
      <xs:enumeration
        value="federated"/>
      <xs:enumeration
        value="any"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element
    name="NameIDPolicy"
    type="lib:NameIDPolicyType"/>
  <xs:simpleType
    name="AuthnContextComparisonType">
    <xs:restriction
      base="xs:string">
      <xs:enumeration
        value="exact"/>
      <xs:enumeration
        value="minimum"/>
      <xs:enumeration
        value="better"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType
    name="ScopingType">
    <xs:sequence>
      <xs:element
        minOccurs="0"
        name="ProxyCount"
        type="xs:nonNegativeInteger"/>
      <xs:element
        minOccurs="0"
        ref="lib:IDPList"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element
    name="Scoping"
    type="lib:ScopingType"/>
  <xs:element
    name="RelayState"
    type="xs:string"/>
  <xs:element
    name="ProtocolProfile"
    type="xs:anyURI"/>
  <xs:element
    name="AuthnContext">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element
            maxOccurs="unbounded"
            name="AuthnContextClassRef"
            type="xs:anyURI"/>
          <xs:element
            maxOccurs="unbounded"
            name="AuthnContextStatementRef"
            type="xs:anyURI"/>
        </xs:choice>
        <xs:element
          minOccurs="0"
          name="AuthnContextComparison"
          type="lib:AuthnContextComparisonType"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element
    name="AuthnResponse"
    type="lib:AuthnResponseType"/>
  <xs:complexType
    name="AuthnResponseType">
    <xs:complexContent>
      <xs:extension
        base="samlp:ResponseType">
        <xs:sequence>
          <xs:element
            maxOccurs="unbounded"
            minOccurs="0"
            ref="lib:Extension"/>
          <xs:element
            ref="lib:ProviderID"/>
          <xs:element
            minOccurs="0"
            ref="lib:RelayState"/>
        </xs:sequence>
        <xs:attribute
          ref="lib:consent"
          use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element
    name="Assertion"
    substitutionGroup="saml:Assertion"
    type="lib:AssertionType"/>
  <xs:complexType
    name="AssertionType">
    <xs:complexContent>
      <xs:extension
        base="saml:AssertionType">
        <xs:attribute
          name="InResponseTo"
          type="xs:NCName"
          use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType
    name="SubjectType">
    <xs:complexContent>
      <xs:extension
        base="saml:SubjectType">
        <xs:sequence>
          <xs:element
            ref="lib:IDPProvidedNameIdentifier"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element
    name="Subject"
    substitutionGroup="saml:Subject"
    type="lib:SubjectType"/>
  <xs:element
    name="EncryptableNameIdentifier"
    substitutionGroup="saml:NameIdentifier"
    type="lib:EncryptableNameIdentifierType"/>
  <xs:complexType
    name="EncryptableNameIdentifierType">
    <xs:simpleContent>
      <xs:extension
        base="saml:NameIdentifierType">
        <xs:attribute
          name="IssueInstant"
          type="xs:dateTime"/>
        <xs:attribute
          name="Nonce"
          type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element
    name="EncryptedNameIdentifier"
    type="lib:EncryptedNameIdentifierType"/>
  <xs:complexType
    name="EncryptedNameIdentifierType">
    <xs:sequence>
      <xs:element
        ref="xenc:EncryptedData"/>
      <xs:element
        minOccurs="0"
        ref="xenc:EncryptedKey"/>
    </xs:sequence>
  </xs:complexType>

  <xs:element
    name="AuthenticationStatement"
    substitutionGroup="saml:Statement"
    type="lib:AuthenticationStatementType"/>
  <xs:complexType
    name="AuthenticationStatementType">
    <xs:complexContent>
      <xs:extension
        base="saml:AuthenticationStatementType">
        <xs:sequence>
          <xs:element
            minOccurs="0"
            name="AuthnContext">
            <xs:complexType>
              <xs:sequence>
                <xs:element
                	minOccurs="0"
                	name="AuthnContextClassRef"
                	type="xs:anyURI"/>
                <xs:choice>
                	<xs:element
                		ref="ac:AuthenticationContextStatement"/>
                	<xs:element
                		name="AuthnContextStatementRef"
                		type="xs:anyURI"/>
                </xs:choice>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute
          name="ReauthenticateOnOrAfter"
          type="xs:dateTime"
          use="optional"/>
        <xs:attribute
          name="SessionIndex"
          type="xs:string"
          use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element
    name="AuthnRequestEnvelope"
    type="lib:AuthnRequestEnvelopeType"/>
  <xs:complexType
    name="AuthnRequestEnvelopeType">
    <xs:complexContent>
      <xs:extension
        base="lib:RequestEnvelopeType">
        <xs:sequence>
          <xs:element
            ref="lib:AuthnRequest"/>
          <xs:element
            ref="lib:ProviderID"/>
          <xs:element
            minOccurs="0"
            name="ProviderName"
            type="xs:string"/>
          <xs:element
            name="AssertionConsumerServiceURL"
            type="xs:anyURI"/>
          <xs:element
            minOccurs="0"
            ref="lib:IDPList"/>
          <xs:element
            minOccurs="0"
            name="IsPassive"
            type="xs:boolean"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType
    name="RequestEnvelopeType">
    <xs:sequence>
      <xs:element
        maxOccurs="unbounded"
        minOccurs="0"
        ref="lib:Extension"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element
    name="IDPList"
    type="lib:IDPListType"/>
  <xs:complexType
    name="IDPListType">
    <xs:sequence>
      <xs:element
        ref="lib:IDPEntries"/>
      <xs:element
        minOccurs="0"
        ref="lib:GetComplete"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element
    name="IDPEntry">
    <xs:complexType>
      <xs:sequence>
        <xs:element
          ref="lib:ProviderID"/>
        <xs:element
          minOccurs="0"
          name="ProviderName"
          type="xs:string"/>
        <xs:element
          name="Loc"
          type="xs:anyURI"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element
    name="IDPEntries">
    <xs:complexType>
      <xs:sequence>
        <xs:element
          maxOccurs="unbounded"
          ref="lib:IDPEntry"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element
    name="GetComplete"
    type="xs:anyURI"/>
  <xs:element
    name="AuthnResponseEnvelope"
    type="lib:AuthnResponseEnvelopeType"/>
  <xs:complexType
    name="AuthnResponseEnvelopeType">
    <xs:complexContent>
      <xs:extension
        base="lib:ResponseEnvelopeType">
        <xs:sequence>
          <xs:element
            ref="lib:AuthnResponse"/>
          <xs:element
            name="AssertionConsumerServiceURL"
            type="xs:anyURI"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType
    name="ResponseEnvelopeType">
    <xs:sequence>
      <xs:element
        maxOccurs="unbounded"
        minOccurs="0"
        ref="lib:Extension"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element
    name="RegisterNameIdentifierRequest"
    type="lib:RegisterNameIdentifierRequestType"/>
  <xs:complexType
    name="RegisterNameIdentifierRequestType">
    <xs:complexContent>
      <xs:extension
        base="samlp:RequestAbstractType">
        <xs:sequence>
          <xs:element
            maxOccurs="unbounded"
            minOccurs="0"
            ref="lib:Extension"/>
          <xs:element
            ref="lib:ProviderID"/>
          <xs:element
            ref="lib:IDPProvidedNameIdentifier"/>
          <xs:element
            ref="lib:SPProvidedNameIdentifier"/>
          <xs:element
            ref="lib:OldProvidedNameIdentifier"/>
          <xs:element
            minOccurs="0"
            ref="lib:RelayState"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element
    name="IDPProvidedNameIdentifier"
    type="saml:NameIdentifierType"/>
  <xs:element
    name="SPProvidedNameIdentifier"
    type="saml:NameIdentifierType"/>
  <xs:element
    name="OldProvidedNameIdentifier"
    type="saml:NameIdentifierType"/>
  <xs:element
    name="RegisterNameIdentifierResponse"
    type="lib:StatusResponseType"/>
  <xs:complexType
    name="StatusResponseType">
    <xs:complexContent>
      <xs:extension
        base="samlp:ResponseAbstractType">
        <xs:sequence>
          <xs:element
            maxOccurs="unbounded"
            minOccurs="0"
            ref="lib:Extension"/>
          <xs:element
            ref="lib:ProviderID"/>
          <xs:element
            ref="samlp:Status"/>
          <xs:element
            minOccurs="0"
            ref="lib:RelayState"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element
    name="FederationTerminationNotification"
    type="lib:FederationTerminationNotificationType"/>
  <xs:complexType
    name="FederationTerminationNotificationType">
    <xs:complexContent>
      <xs:extension
        base="samlp:RequestAbstractType">
        <xs:sequence>
          <xs:element
            maxOccurs="unbounded"
            minOccurs="0"
            ref="lib:Extension"/>
          <xs:element
            ref="lib:ProviderID"/>
          <xs:element
            ref="saml:NameIdentifier"/>
        </xs:sequence>
        <xs:attribute
          ref="lib:consent"
          use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element
    name="LogoutRequest"
    type="lib:LogoutRequestType"/>
  <xs:complexType
    name="LogoutRequestType">
    <xs:complexContent>
      <xs:extension
        base="samlp:RequestAbstractType">
        <xs:sequence>
          <xs:element
            maxOccurs="unbounded"
            minOccurs="0"
            ref="lib:Extension"/>
          <xs:element
            ref="lib:ProviderID"/>
          <xs:element
            ref="saml:NameIdentifier"/>
          <xs:element
            minOccurs="0"
            name="SessionIndex"
            type="xs:string"/>
          <xs:element
            minOccurs="0"
            ref="lib:RelayState"/>
        </xs:sequence>
        <xs:attribute
          ref="lib:consent"
          use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element
    name="LogoutResponse"
    type="lib:StatusResponseType"/>
  <xs:element
    name="NameIdentifierMappingRequest"
    type="lib:NameIdentifierMappingRequestType"/>
  <xs:complexType
    name="NameIdentifierMappingRequestType">
    <xs:complexContent>
      <xs:extension
        base="samlp:RequestAbstractType">
        <xs:sequence>
          <xs:element
            maxOccurs="unbounded"
            minOccurs="0"
            ref="lib:Extension"/>
          <xs:element
            ref="lib:ProviderID"/>
          <xs:element
            ref="saml:NameIdentifier"/>
          <xs:element
            name="TargetNamespace"
            type="md:entityIDType"/>
        </xs:sequence>
        <xs:attribute
          ref="lib:consent"
          use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element
    name="NameIdentifierMappingResponse"
    type="lib:NameIdentifierMappingResponseType"/>
  <xs:complexType
    name="NameIdentifierMappingResponseType">
    <xs:complexContent>
      <xs:extension
        base="samlp:ResponseAbstractType">
        <xs:sequence>
          <xs:element
            maxOccurs="unbounded"
            minOccurs="0"
            ref="lib:Extension"/>
          <xs:element
            ref="lib:ProviderID"/>
          <xs:element
            ref="samlp:Status"/>
          <xs:element
            minOccurs="0"
            ref="saml:NameIdentifier"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>
