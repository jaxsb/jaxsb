<?xml version="1.0" encoding="UTF-8"?>
<!-- filename: lib-arch-iff-utility.xsd -->
<xs:schema
  attributeFormDefault="unqualified"
  elementFormDefault="qualified"
  xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>Liberty Alliance Project utility schema. A collection of IDentity Federatiopn
      Framework (ID-FF) common elements and types. This schema is intended for use in ID-FF schemas.</xs:documentation>
    <xs:documentation>Copyright 2003 Liberty Alliance Project</xs:documentation>
    <xs:documentation>This file intended for inclusion, rather than imporation, into other schemas. </xs:documentation>
    <xs:documentation>This version: 2003-06-04</xs:documentation>
  </xs:annotation>
  <xs:simpleType
    name="IDType">
    <xs:annotation>
      <xs:documentation>This type should be used to provided IDs to components that have IDs that
        may not be scoped within the local xml instance document </xs:documentation>
    </xs:annotation>
    <xs:restriction
      base="xs:string"/>
  </xs:simpleType>
  <xs:simpleType
    name="IDReferenceType">
    <xs:annotation>
      <xs:documentation> This type can be used when referring to elements that are identified using
        an IDType </xs:documentation>
    </xs:annotation>
    <xs:restriction
      base="xs:string"/>
  </xs:simpleType>
  <xs:element
    name="Status"
    type="StatusType">
    <xs:annotation>
      <xs:documentation> A standard Status type</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType
    name="StatusType">
    <xs:annotation>
      <xs:documentation> A type that may be used for status codes. </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element
        minOccurs="0"
        ref="Status"/>
    </xs:sequence>
    <xs:attribute
      name="code"
      type="xs:QName"
      use="required"/>
    <xs:attribute
      name="ref"
      type="xs:NCName"
      use="optional"/>
    <xs:attribute
      name="comment"
      type="xs:string"
      use="optional"/>
  </xs:complexType>
  <xs:complexType
    name="EmptyType">
    <xs:annotation>
      <xs:documentation> This type may be used to create an empty element </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:restriction
        base="xs:anyType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:element
    name="Extension"
    type="extensionType">
    <xs:annotation>
      <xs:documentation>An element that contains arbitrary content extensions from other
      namespaces</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType
    name="extensionType">
    <xs:annotation>
      <xs:documentation>A type for arbitrary content extensions from other
      namespaces</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any
        maxOccurs="unbounded"
        namespace="##other"
        processContents="lax"/>
    </xs:sequence>
  </xs:complexType>
  <xs:attribute
    name="consent"
    type="xs:anyURI">
    <xs:annotation>
      <xs:documentation> This attribute is used by message constructors that need/want to report
        about obtained consent.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
</xs:schema>
